from random import randint
import click

class pizza():
    """
    –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å –ø–∏—Ü—Ü–∞
    """

    def __init__(self, size):
        self.tomato_sauce = True
        self.mozzarella = True
        if size == 'L' or size == 'XL':
            pass
        else:
            raise ValueError('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä L –∏–ª–∏ XL')

    def __hash__(self):
        pass

    def __eq__(self, another):
        pass


class Margherita(pizza):
    """
    –ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ L –∏–ª–∏ XL
    """

    def __init__(self, size):
        self.size = size
        if self.size == 'L':
            self.tomato_sauce = 10
            self.mozzarella = 2
            self.tomatoes = 4
        elif self.size == 'XL':
            self.tomato_sauce = 15
            self.mozzarella = 3
            self.tomatoes = 12
        else:
            raise ValueError('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä L –∏–ª–∏ XL')

    def __repr__(self):
        return f'Margherita {self.size}'

    def __dict__(self):
        """
        –†–µ—Ü–µ–ø—Ç
        """
        return {"tomato_sauce": self.tomato_sauce, "mozzarella": self.mozzarella, "tomatoes": self.tomatoes}

    def __hash__(self):
        """
        –î–µ–ª–∞–µ—Ç –ø–∏—Ü—Ü—ã –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏
        """
        return hash((self.tomato_sauce, self.mozzarella, self.tomatoes, self.size))

    def __eq__(self, another):
        """
        –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø–∏—Ü—Ü—ã
        """
        eq_tomato_sauce = (self.tomato_sauce == another.tomato_sauce)
        eq_mozzarella = (self.mozzarella == another.mozzarella)
        eq_tomatoes = (self.tomatoes == another.tomatoes)
        return eq_tomato_sauce and eq_mozzarella and eq_tomatoes


class Pepperoni(pizza):
    """
    –ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ —Ä–∞–∑–º–µ—Ä–∞ L –∏–ª–∏ XL
    """

    def __init__(self, size):
        self.size = size
        if self.size == 'L':
            self.tomato_sauce = 10
            self.mozzarella = 2
            self.pepperoni = 10
        elif self.size == 'XL':
            self.tomato_sauce = 15
            self.mozzarella = 3
            self.pepperoni = 20
        else:
            raise ValueError('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä L –∏–ª–∏ XL')

    def __repr__(self):
        return f'Pepperoni {self.size}'

    def __dict__(self):
        """
        –†–µ—Ü–µ–ø—Ç
        """
        return {"tomato_sauce": self.tomato_sauce, "mozzarella": self.mozzarella, "pepperoni": self.pepperoni}

    def __hash__(self):
        """
        –î–µ–ª–∞–µ—Ç –ø–∏—Ü—Ü—ã –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏
        """
        return hash((self.tomato_sauce, self.mozzarella, self.pepperoni, self.size))

    def __eq__(self, another):
        """
        –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø–∏—Ü—Ü—ã
        """
        eq_tomato_sauce = (self.tomato_sauce == another.tomato_sauce)
        eq_mozzarella = (self.mozzarella == another.mozzarella)
        eq_pepperoni = (self.pepperoni == another.pepperoni)
        return eq_tomato_sauce and eq_mozzarella and eq_pepperoni


class Hawaiian(pizza):
    """
    –ü–∏—Ü—Ü–∞ –ì–∞–≤–∞–π—Å–∫–∞—è —Ä–∞–∑–º–µ—Ä–∞ L –∏–ª–∏ XL
    """

    def __init__(self, size):
        self.size = size
        if self.size == 'L':
            self.tomato_sauce = 10
            self.mozzarella = 2
            self.chicken = 1
            self.pineapples = 1
        elif self.size == 'XL':
            self.tomato_sauce = 15
            self.mozzarella = 3
            self.chicken = 2
            self.pineapples = 2
        else:
            raise ValueError('–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä L –∏–ª–∏ XL')

    def __repr__(self):
        return f'Hawaiian {self.size}'

    def __dict__(self):
        """
        –†–µ—Ü–µ–ø—Ç
        """
        return {"tomato_sauce": self.tomato_sauce,
                "mozzarella": self.mozzarella, "chicken": self.chicken,
                "pineapples": self.pineapples}

    def __hash__(self):
        """
        –î–µ–ª–∞–µ—Ç –ø–∏—Ü—Ü—ã –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ç–æ–∂–¥–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏
        """
        return hash((self.tomato_sauce, self.mozzarella, self.chicken, self.size))

    def __eq__(self, another):
        """
        –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø–∏—Ü—Ü—ã
        """
        eq_tomato_sauce = (self.tomato_sauce == another.tomato_sauce)
        eq_mozzarella = (self.mozzarella == another.mozzarella)
        eq_chicken = (self.chicken == another.chicken)
        eq_pineapples = (self.pineapples == another.pineapples)
        return eq_tomato_sauce and eq_mozzarella and eq_chicken and eq_pineapples


def log(message):
    def decorator(function):
        def decorated(*args, **kwargs):
            print(message.format(*args, function(*args, **kwargs)))
            return function(*args, **kwargs)
        return decorated
    return decorator


@log('üç≥ –ì–æ—Ç–æ–≤–∏–º {} {} –∑–∞ {}—Å!')
def bake(pizza_: str, size: str) -> int:
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è"""
    return randint(1, 60)


@log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ {} –∑–∞ {}—Å!')
def delivery(pizza_: str) -> int:
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏"""
    return randint(1, 60)


@log('üè† –ó–∞–±—Ä–∞–ª–∏ {} –∑–∞ {}—Å!')
def pickup(pizza_: str) -> int:
    """–°–∞–º–æ–≤—ã–≤–æ–∑, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –≤—Ä–µ–º—è –æ—Å—Ç—ã–≤–∞–Ω–∏—è –ø–∏—Ü—Ü—ã, –ø–æ–∫–∞ –µ—ë –Ω–µ –∑–∞–±—Ä–∞–ª–∏"""
    return randint(1, 60)


@click.group()
def cli():
    pass


@cli.command()
@click.option('=delivery_', prompt='want to deliver?', default=False, is_flag=True)
@click.argument('pizza_')
@click.argument('size')
def order(pizza_: str, size: str, delivery_: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    if f'{pizza_} {size}' in [str(subclass('L')) for subclass in pizza.__subclasses__()]:
            bake(pizza_, size)
    elif f'{pizza_} {size}' in [str(subclass('XL')) for subclass in pizza.__subclasses__()]:
            bake(pizza_, size)
    else:
        raise KeyError("–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ —Å–º–æ—Ç—Ä–∏ –º–µ–Ω—é...")
    if delivery_:
        delivery(pizza_)


@cli.command()
def menu():
    """
    –í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é –∏–∑ –≤—Å–µ—Ö –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤ –∫–ª–∞—Å—Å–∞ pizza —Ä–∞–∑–º–µ—Ä–∞ L, XL
    '"""
    for subclass in pizza.__subclasses__():
        print("- ", subclass('XL'), ": ", ''.join('{} - {} gr, '.format(key, val)
              for key, val in sorted(subclass("XL").__dict__().items())))
        print("- ", subclass('L'), ": ", ''.join('{} - {} gr, '.format(key, val)
              for key, val in sorted(subclass("L").__dict__().items())))


if __name__ == '__main__':
    #menu()
    cli()

